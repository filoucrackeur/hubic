<?php
namespace Filoucrackeur\Hubic\Controller\Backend;

use Filoucrackeur\Hubic\Domain\Model\Account;
use Filoucrackeur\Hubic\Domain\Repository\AccountRepository;
use Filoucrackeur\Hubic\Service\ClientUtility;
use TYPO3\CMS\Core\Database\ConnectionPool;
use TYPO3\CMS\Core\Database\Query\QueryBuilder;
use TYPO3\CMS\Core\Utility\GeneralUtility;
use TYPO3\CMS\Extbase\Mvc\Controller\ActionController;
use TYPO3\CMS\Extbase\Utility\DebuggerUtility;

class AccountController extends ActionController
{
    /**
     * @var ClientUtility $client
     */
    protected $client;


    protected $accountRepository;


    public function initializeAction()
    {
        parent::initializeAction(); // TODO: Change the autogenerated stub

        /* @var AccountRepository $accountRepository */
        $this->accountRepository = $this->objectManager->get('Filoucrackeur\Hubic\Domain\Repository\AccountRepository');

    }


    public function indexAction()
    {
        $accounts = $this->accountRepository->findAll();
        $this->view->assign('accounts', $accounts);
    }

    public function showAction(Account $account){
        /* @var ClientUtility $client */
        $this->client = GeneralUtility::makeInstance(ClientUtility::class);

        $clientAccount = $this->client->getAccount();
        $clientAccountQuota = $this->client->getAccountQuota();
        $agreement = $this->client->getAgreement();

        $this->view->assignMultiple([
            'account' => $account,
            'clientAccount' => $clientAccount,
            'clientAccountQuota' => $clientAccountQuota,
            'agreement' => $agreement,
            'authorizationRequestUrl' => $this->client->getAuthorizationRequestUrl()
        ]);
    }

    public function authenticationRequestAction(Account $account) {
        $this->addFlashMessage('Token succesfully added', 'Authentication request', \TYPO3\CMS\Core\Messaging\AbstractMessage::OK);
        $this->redirect('show','','',['account' => $account]);
    }
}
